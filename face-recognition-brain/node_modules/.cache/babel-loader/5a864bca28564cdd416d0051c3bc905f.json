{"ast":null,"code":"(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node/CommonJS\n    module.exports = function (root, jQuery) {\n      if (jQuery === undefined) {\n        // require('jQuery') returns a factory that requires window to\n        // build a jQuery instance, we normalize how we use modules\n        // that require this pattern but the window provided is a noop\n        // if it's defined (how jquery works)\n        if (typeof window !== 'undefined') {\n          jQuery = require('jquery');\n        } else {\n          jQuery = require('jquery')(root);\n        }\n      }\n\n      factory(jQuery);\n      return jQuery;\n    };\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  $.fn.tilt = function (options) {\n    /**\n     * RequestAnimationFrame\n     */\n    const requestTick = function () {\n      if (this.ticking) return;\n      requestAnimationFrame(updateTransforms.bind(this));\n      this.ticking = true;\n    };\n    /**\n     * Bind mouse movement evens on instance\n     */\n\n\n    const bindEvents = function () {\n      const _this = this;\n\n      $(this).on('mousemove', mouseMove);\n      $(this).on('mouseenter', mouseEnter);\n      if (this.settings.reset) $(this).on('mouseleave', mouseLeave);\n      if (this.settings.glare) $(window).on('resize', updateGlareSize.bind(_this));\n    };\n    /**\n     * Set transition only on mouse leave and mouse enter so it doesn't influence mouse move transforms\n     */\n\n\n    const setTransition = function () {\n      if (this.timeout !== undefined) clearTimeout(this.timeout);\n      $(this).css({\n        'transition': `${this.settings.speed}ms ${this.settings.easing}`\n      });\n      if (this.settings.glare) this.glareElement.css({\n        'transition': `opacity ${this.settings.speed}ms ${this.settings.easing}`\n      });\n      this.timeout = setTimeout(() => {\n        $(this).css({\n          'transition': ''\n        });\n        if (this.settings.glare) this.glareElement.css({\n          'transition': ''\n        });\n      }, this.settings.speed);\n    };\n    /**\n     * When user mouse enters tilt element\n     */\n\n\n    const mouseEnter = function (event) {\n      this.ticking = false;\n      $(this).css({\n        'will-change': 'transform'\n      });\n      setTransition.call(this); // Trigger change event\n\n      $(this).trigger(\"tilt.mouseEnter\");\n    };\n    /**\n     * Return the x,y position of the mouse on the tilt element\n     * @returns {{x: *, y: *}}\n     */\n\n\n    const getMousePositions = function (event) {\n      if (typeof event === \"undefined\") {\n        event = {\n          pageX: $(this).offset().left + $(this).outerWidth() / 2,\n          pageY: $(this).offset().top + $(this).outerHeight() / 2\n        };\n      }\n\n      return {\n        x: event.pageX,\n        y: event.pageY\n      };\n    };\n    /**\n     * When user mouse moves over the tilt element\n     */\n\n\n    const mouseMove = function (event) {\n      this.mousePositions = getMousePositions(event);\n      requestTick.call(this);\n    };\n    /**\n     * When user mouse leaves tilt element\n     */\n\n\n    const mouseLeave = function () {\n      setTransition.call(this);\n      this.reset = true;\n      requestTick.call(this); // Trigger change event\n\n      $(this).trigger(\"tilt.mouseLeave\");\n    };\n    /**\n     * Get tilt values\n     *\n     * @returns {{x: tilt value, y: tilt value}}\n     */\n\n\n    const getValues = function () {\n      const width = $(this).outerWidth();\n      const height = $(this).outerHeight();\n      const left = $(this).offset().left;\n      const top = $(this).offset().top;\n      const percentageX = (this.mousePositions.x - left) / width;\n      const percentageY = (this.mousePositions.y - top) / height; // x or y position inside instance / width of instance = percentage of position inside instance * the max tilt value\n\n      const tiltX = (this.settings.maxTilt / 2 - percentageX * this.settings.maxTilt).toFixed(2);\n      const tiltY = (percentageY * this.settings.maxTilt - this.settings.maxTilt / 2).toFixed(2); // angle\n\n      const angle = Math.atan2(this.mousePositions.x - (left + width / 2), -(this.mousePositions.y - (top + height / 2))) * (180 / Math.PI); // Return x & y tilt values\n\n      return {\n        tiltX,\n        tiltY,\n        'percentageX': percentageX * 100,\n        'percentageY': percentageY * 100,\n        angle\n      };\n    };\n    /**\n     * Update tilt transforms on mousemove\n     */\n\n\n    const updateTransforms = function () {\n      this.transforms = getValues.call(this);\n\n      if (this.reset) {\n        this.reset = false;\n        $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg)`); // Rotate glare if enabled\n\n        if (this.settings.glare) {\n          this.glareElement.css('transform', `rotate(180deg) translate(-50%, -50%)`);\n          this.glareElement.css('opacity', `0`);\n        }\n\n        return;\n      } else {\n        $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(${this.settings.disableAxis === 'x' ? 0 : this.transforms.tiltY}deg) rotateY(${this.settings.disableAxis === 'y' ? 0 : this.transforms.tiltX}deg) scale3d(${this.settings.scale},${this.settings.scale},${this.settings.scale})`); // Rotate glare if enabled\n\n        if (this.settings.glare) {\n          this.glareElement.css('transform', `rotate(${this.transforms.angle}deg) translate(-50%, -50%)`);\n          this.glareElement.css('opacity', `${this.transforms.percentageY * this.settings.maxGlare / 100}`);\n        }\n      } // Trigger change event\n\n\n      $(this).trigger(\"change\", [this.transforms]);\n      this.ticking = false;\n    };\n    /**\n     * Prepare elements\n     */\n\n\n    const prepareGlare = function () {\n      const glarePrerender = this.settings.glarePrerender; // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n\n      if (!glarePrerender) // Create glare element\n        $(this).append('<div class=\"js-tilt-glare\"><div class=\"js-tilt-glare-inner\"></div></div>'); // Store glare selector if glare is enabled\n\n      this.glareElementWrapper = $(this).find(\".js-tilt-glare\");\n      this.glareElement = $(this).find(\".js-tilt-glare-inner\"); // Remember? We assume all css is already set, so just return\n\n      if (glarePrerender) return; // Abstracted re-usable glare styles\n\n      const stretch = {\n        'position': 'absolute',\n        'top': '0',\n        'left': '0',\n        'width': '100%',\n        'height': '100%'\n      }; // Style glare wrapper\n\n      this.glareElementWrapper.css(stretch).css({\n        'overflow': 'hidden',\n        'pointer-events': 'none'\n      }); // Style glare element\n\n      this.glareElement.css({\n        'position': 'absolute',\n        'top': '50%',\n        'left': '50%',\n        'background-image': `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n        'width': `${$(this).outerWidth() * 2}`,\n        'height': `${$(this).outerWidth() * 2}`,\n        'transform': 'rotate(180deg) translate(-50%, -50%)',\n        'transform-origin': '0% 0%',\n        'opacity': '0'\n      });\n    };\n    /**\n     * Update glare on resize\n     */\n\n\n    const updateGlareSize = function () {\n      this.glareElement.css({\n        'width': `${$(this).outerWidth() * 2}`,\n        'height': `${$(this).outerWidth() * 2}`\n      });\n    };\n    /**\n     * Public methods\n     */\n\n\n    $.fn.tilt.destroy = function () {\n      $(this).each(function () {\n        $(this).find('.js-tilt-glare').remove();\n        $(this).css({\n          'will-change': '',\n          'transform': ''\n        });\n        $(this).off('mousemove mouseenter mouseleave');\n      });\n    };\n\n    $.fn.tilt.getValues = function () {\n      const results = [];\n      $(this).each(function () {\n        this.mousePositions = getMousePositions.call(this);\n        results.push(getValues.call(this));\n      });\n      return results;\n    };\n\n    $.fn.tilt.reset = function () {\n      $(this).each(function () {\n        this.mousePositions = getMousePositions.call(this);\n        this.settings = $(this).data('settings');\n        mouseLeave.call(this);\n        setTimeout(() => {\n          this.reset = false;\n        }, this.settings.transition);\n      });\n    };\n    /**\n     * Loop every instance\n     */\n\n\n    return this.each(function () {\n      /**\n       * Default settings merged with user settings\n       * Can be set trough data attributes or as parameter.\n       * @type {*}\n       */\n      this.settings = $.extend({\n        maxTilt: $(this).is('[data-tilt-max]') ? $(this).data('tilt-max') : 20,\n        perspective: $(this).is('[data-tilt-perspective]') ? $(this).data('tilt-perspective') : 300,\n        easing: $(this).is('[data-tilt-easing]') ? $(this).data('tilt-easing') : 'cubic-bezier(.03,.98,.52,.99)',\n        scale: $(this).is('[data-tilt-scale]') ? $(this).data('tilt-scale') : '1',\n        speed: $(this).is('[data-tilt-speed]') ? $(this).data('tilt-speed') : '400',\n        transition: $(this).is('[data-tilt-transition]') ? $(this).data('tilt-transition') : true,\n        disableAxis: $(this).is('[data-tilt-disable-axis]') ? $(this).data('tilt-disable-axis') : null,\n        axis: $(this).is('[data-tilt-axis]') ? $(this).data('tilt-axis') : null,\n        reset: $(this).is('[data-tilt-reset]') ? $(this).data('tilt-reset') : true,\n        glare: $(this).is('[data-tilt-glare]') ? $(this).data('tilt-glare') : false,\n        maxGlare: $(this).is('[data-tilt-maxglare]') ? $(this).data('tilt-maxglare') : 1\n      }, options); // Add deprecation warning & set disableAxis to deprecated axis setting\n\n      if (this.settings.axis !== null) {\n        console.warn('Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information');\n        this.settings.disableAxis = this.settings.axis;\n      }\n\n      this.init = () => {\n        // Store settings\n        $(this).data('settings', this.settings); // Prepare element\n\n        if (this.settings.glare) prepareGlare.call(this); // Bind events\n\n        bindEvents.call(this);\n      }; // Init\n\n\n      this.init();\n    });\n  };\n  /**\n   * Auto load\n   */\n\n\n  $('[data-tilt]').tilt();\n  return true;\n});","map":{"version":3,"sources":["C:/Users/khash/Documents/GitHub/face-recognition-brain/node_modules/tilt.js/src/tilt.jquery.js"],"names":["factory","define","amd","module","exports","root","jQuery","undefined","window","require","$","fn","tilt","options","requestTick","ticking","requestAnimationFrame","updateTransforms","bind","bindEvents","_this","on","mouseMove","mouseEnter","settings","reset","mouseLeave","glare","updateGlareSize","setTransition","timeout","clearTimeout","css","speed","easing","glareElement","setTimeout","event","call","trigger","getMousePositions","pageX","offset","left","outerWidth","pageY","top","outerHeight","x","y","mousePositions","getValues","width","height","percentageX","percentageY","tiltX","maxTilt","toFixed","tiltY","angle","Math","atan2","PI","transforms","perspective","disableAxis","scale","maxGlare","prepareGlare","glarePrerender","append","glareElementWrapper","find","stretch","destroy","each","remove","off","results","push","data","transition","extend","is","axis","console","warn","init"],"mappings":"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","sourcesContent":["(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function( root, jQuery ) {\n            if ( jQuery === undefined ) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if ( typeof window !== 'undefined' ) {\n                    jQuery = require('jquery');\n                }\n                else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            factory(jQuery);\n            return jQuery;\n        };\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function ($) {\n    $.fn.tilt = function (options) {\n\n        /**\n         * RequestAnimationFrame\n         */\n        const requestTick = function() {\n            if (this.ticking) return;\n            requestAnimationFrame(updateTransforms.bind(this));\n            this.ticking = true;\n        };\n\n        /**\n         * Bind mouse movement evens on instance\n         */\n        const bindEvents = function() {\n            const _this = this;\n            $(this).on('mousemove', mouseMove);\n            $(this).on('mouseenter', mouseEnter);\n            if (this.settings.reset) $(this).on('mouseleave', mouseLeave);\n            if (this.settings.glare) $(window).on('resize', updateGlareSize.bind(_this));\n        };\n\n        /**\n         * Set transition only on mouse leave and mouse enter so it doesn't influence mouse move transforms\n         */\n        const setTransition = function() {\n            if (this.timeout !== undefined) clearTimeout(this.timeout);\n            $(this).css({'transition': `${this.settings.speed}ms ${this.settings.easing}`});\n            if(this.settings.glare) this.glareElement.css({'transition': `opacity ${this.settings.speed}ms ${this.settings.easing}`});\n            this.timeout = setTimeout(() => {\n                $(this).css({'transition': ''});\n                if(this.settings.glare) this.glareElement.css({'transition': ''});\n            }, this.settings.speed);\n        };\n\n        /**\n         * When user mouse enters tilt element\n         */\n        const mouseEnter = function(event) {\n            this.ticking = false;\n            $(this).css({'will-change': 'transform'});\n            setTransition.call(this);\n\n            // Trigger change event\n            $(this).trigger(\"tilt.mouseEnter\");\n        };\n\n        /**\n         * Return the x,y position of the mouse on the tilt element\n         * @returns {{x: *, y: *}}\n         */\n        const getMousePositions = function(event) {\n            if (typeof(event) === \"undefined\") {\n                event = {\n                    pageX: $(this).offset().left + $(this).outerWidth() / 2,\n                    pageY: $(this).offset().top + $(this).outerHeight() / 2\n                };\n            }\n            return {x: event.pageX, y: event.pageY};\n        };\n\n        /**\n         * When user mouse moves over the tilt element\n         */\n        const mouseMove = function(event) {\n            this.mousePositions = getMousePositions(event);\n            requestTick.call(this);\n        };\n\n        /**\n         * When user mouse leaves tilt element\n         */\n        const mouseLeave = function() {\n            setTransition.call(this);\n            this.reset = true;\n            requestTick.call(this);\n\n            // Trigger change event\n            $(this).trigger(\"tilt.mouseLeave\");\n        };\n\n        /**\n         * Get tilt values\n         *\n         * @returns {{x: tilt value, y: tilt value}}\n         */\n        const getValues = function() {\n            const width = $(this).outerWidth();\n            const height = $(this).outerHeight();\n            const left = $(this).offset().left;\n            const top = $(this).offset().top;\n            const percentageX = (this.mousePositions.x - left) / width;\n            const percentageY = (this.mousePositions.y - top) / height;\n            // x or y position inside instance / width of instance = percentage of position inside instance * the max tilt value\n            const tiltX = ((this.settings.maxTilt / 2) - ((percentageX) * this.settings.maxTilt)).toFixed(2);\n            const tiltY = (((percentageY) * this.settings.maxTilt) - (this.settings.maxTilt / 2)).toFixed(2);\n            // angle\n            const angle = Math.atan2(this.mousePositions.x - (left+width/2),- (this.mousePositions.y - (top+height/2)) )*(180/Math.PI);\n            // Return x & y tilt values\n            return {tiltX, tiltY, 'percentageX': percentageX * 100, 'percentageY': percentageY * 100, angle};\n        };\n\n        /**\n         * Update tilt transforms on mousemove\n         */\n        const updateTransforms = function() {\n            this.transforms = getValues.call(this);\n\n            if (this.reset) {\n                this.reset = false;\n                $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg)`);\n\n                // Rotate glare if enabled\n                if (this.settings.glare){\n                    this.glareElement.css('transform', `rotate(180deg) translate(-50%, -50%)`);\n                    this.glareElement.css('opacity', `0`);\n                }\n\n                return;\n            } else {\n                $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(${this.settings.disableAxis === 'x' ? 0 : this.transforms.tiltY}deg) rotateY(${this.settings.disableAxis === 'y' ? 0 : this.transforms.tiltX}deg) scale3d(${this.settings.scale},${this.settings.scale},${this.settings.scale})`);\n\n                // Rotate glare if enabled\n                if (this.settings.glare){\n                    this.glareElement.css('transform', `rotate(${this.transforms.angle}deg) translate(-50%, -50%)`);\n                    this.glareElement.css('opacity', `${this.transforms.percentageY * this.settings.maxGlare / 100}`);\n                }\n            }\n\n            // Trigger change event\n            $(this).trigger(\"change\", [this.transforms]);\n\n            this.ticking = false;\n        };\n\n        /**\n         * Prepare elements\n         */\n        const prepareGlare = function () {\n            const glarePrerender = this.settings.glarePrerender;\n\n            // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n            if (!glarePrerender)\n            // Create glare element\n                $(this).append('<div class=\"js-tilt-glare\"><div class=\"js-tilt-glare-inner\"></div></div>');\n\n            // Store glare selector if glare is enabled\n            this.glareElementWrapper = $(this).find(\".js-tilt-glare\");\n            this.glareElement = $(this).find(\".js-tilt-glare-inner\");\n\n            // Remember? We assume all css is already set, so just return\n            if (glarePrerender) return;\n\n            // Abstracted re-usable glare styles\n            const stretch = {\n                'position': 'absolute',\n                'top': '0',\n                'left': '0',\n                'width': '100%',\n                'height': '100%',\n            };\n\n            // Style glare wrapper\n            this.glareElementWrapper.css(stretch).css({\n                'overflow': 'hidden',\n                'pointer-events': 'none',\n            });\n\n            // Style glare element\n            this.glareElement.css({\n                'position': 'absolute',\n                'top': '50%',\n                'left': '50%',\n                'background-image': `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n                'width': `${$(this).outerWidth()*2}`,\n                'height': `${$(this).outerWidth()*2}`,\n                'transform': 'rotate(180deg) translate(-50%, -50%)',\n                'transform-origin': '0% 0%',\n                'opacity': '0',\n            });\n\n        };\n\n        /**\n         * Update glare on resize\n         */\n        const updateGlareSize = function () {\n            this.glareElement.css({\n                'width': `${$(this).outerWidth()*2}`,\n                'height': `${$(this).outerWidth()*2}`,\n            });\n        };\n\n        /**\n         * Public methods\n         */\n        $.fn.tilt.destroy = function() {\n            $(this).each(function () {\n                $(this).find('.js-tilt-glare').remove();\n                $(this).css({'will-change': '', 'transform': ''});\n                $(this).off('mousemove mouseenter mouseleave');\n            });\n        };\n\n        $.fn.tilt.getValues = function() {\n            const results = [];\n            $(this).each(function () {\n                this.mousePositions = getMousePositions.call(this);\n                results.push(getValues.call(this));\n            });\n            return results;\n        };\n\n        $.fn.tilt.reset = function() {\n            $(this).each(function () {\n                this.mousePositions = getMousePositions.call(this);\n                this.settings = $(this).data('settings');\n                mouseLeave.call(this);\n                setTimeout(() => {\n                    this.reset = false;\n                }, this.settings.transition);\n            });\n        };\n\n        /**\n         * Loop every instance\n         */\n        return this.each(function () {\n\n            /**\n             * Default settings merged with user settings\n             * Can be set trough data attributes or as parameter.\n             * @type {*}\n             */\n            this.settings = $.extend({\n                maxTilt: $(this).is('[data-tilt-max]') ? $(this).data('tilt-max') : 20,\n                perspective: $(this).is('[data-tilt-perspective]') ? $(this).data('tilt-perspective') : 300,\n                easing: $(this).is('[data-tilt-easing]') ? $(this).data('tilt-easing') : 'cubic-bezier(.03,.98,.52,.99)',\n                scale: $(this).is('[data-tilt-scale]') ? $(this).data('tilt-scale') : '1',\n                speed: $(this).is('[data-tilt-speed]') ? $(this).data('tilt-speed') : '400',\n                transition: $(this).is('[data-tilt-transition]') ? $(this).data('tilt-transition') : true,\n                disableAxis: $(this).is('[data-tilt-disable-axis]') ? $(this).data('tilt-disable-axis') : null,\n                axis: $(this).is('[data-tilt-axis]') ? $(this).data('tilt-axis') : null,\n                reset: $(this).is('[data-tilt-reset]') ? $(this).data('tilt-reset') : true,\n                glare: $(this).is('[data-tilt-glare]') ? $(this).data('tilt-glare') : false,\n                maxGlare: $(this).is('[data-tilt-maxglare]') ? $(this).data('tilt-maxglare') : 1,\n            }, options);\n\n            // Add deprecation warning & set disableAxis to deprecated axis setting\n            if(this.settings.axis !== null){\n                console.warn('Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information');\n                this.settings.disableAxis = this.settings.axis;\n            }\n\n            this.init = () => {\n                // Store settings\n                $(this).data('settings', this.settings);\n\n                // Prepare element\n                if(this.settings.glare) prepareGlare.call(this);\n\n                // Bind events\n                bindEvents.call(this);\n            };\n\n            // Init\n            this.init();\n\n        });\n    };\n\n    /**\n     * Auto load\n     */\n    $('[data-tilt]').tilt();\n\n    return true;\n}));"]},"metadata":{},"sourceType":"script"}